#!/bin/sh
# Copyright (C) 2020 Patrick H. Rigney, All Rights Reserved
# This file is part of Reactor.
# See https://www.toggledbits.com/static/reactor/docs/Installation/#license-and-use-restrictions
#
# THIS FILE IS AUTOMATICALLY OVERWRITTEN BY REACTOR PLUGIN UPGRADES. DO NOT MODIFY.
# See the above documentation for configuration changes (e.g. test target servers, interval, etc.)

VERSION="20295.1440"
LOGFILE=/proc/self/fd/1
CONF=
DEFAULT_SERVERS=8.8.8.8,8.8.4.4,1.1.1.1,www.facebook.com,www.google.com,www.amazon.com

PLATFORM=$(awk '/^machine/ { FS=":"; print $2; }' /proc/cpuinfo)
expr "$PLATFORM" : '.*Sercomm' >/dev/null && IS_VERA=true
[[ ${IS_VERA:-false} -a -f /sbin/procd ]] && VERA_PROCD=true

install() {
	if ${VERA_PROCD:-false}; then
		echo "Installing for Vera (${PLATFORM}) with procd..."
		[ -f /etc/init.d/reactor_internet_check ] && /etc/init.d/reactor_internet_check stop && sleep 5
		cat <<PROCD >/etc/init.d/reactor_internet_check
#!/bin/sh /etc/rc.common
# THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT EDIT -- $VERSION
START=85
STOP=10

USE_PROCD=1
PROG=/etc/cmh-ludl/reactor_internet_check.sh
LOGFILE=/tmp/reactor_internet_check.log

start_service () {
	rm -f /var/run/reactor_internet_check.stop
	procd_open_instance
	procd_set_param command \$PROG -L "\$LOGFILE"
	procd_set_param limits core="unlimited"
	procd_set_param respawn 3600 90 10
	procd_set_param pidfile /var/run/reactor_internet_check.pid
	procd_close_instance
}
PROCD
		chmod ug+rx,o= /etc/init.d/reactor_internet_check
		/etc/init.d/reactor_internet_check disable
		rm -f /etc/rc.d/S*reactor_internet_check /etc/rc.d/K*reactor_internet_check
		/etc/init.d/reactor_internet_check enable
		/etc/init.d/reactor_internet_check start
		return 0
	elif ${IS_VERA:-false}; then
		# Older Vera, no PROCD
		echo "Installing for Vera (${PLATFORM}) without procd..."
		[ -f /etc/init.d/reactor_internet_check ] && /etc/init.d/reactor_internet_check stop && sleep 5
		cat <<PROCS >/etc/init.d/reactor_internet_check
#!/bin/sh /etc/rc.common
# THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT EDIT -- $VERSION
START=85
STOP=10

# Non-procd version compatible with older systems.
PROG=/etc/cmh-ludl/reactor_internet_check.sh
LOGFILE=/tmp/reactor_internet_check.log

get_pid() {
	PID=\$(pgrep -f "\$PROG")
}

start() {
	get_pid
	[ -n "\$PID" ] && { echo "already running"; exit 255; }
	rm -f /var/run/reactor_internet_check.stop
	\$PROG -L "\$LOGFILE" &
	sleep 2
	get_pid
	echo \$PID >/var/run/reactor_internet_check.pid
}

stop() {
	get_pid
	if [ -n "\$PID" ]; then
		touch /var/run/reactor_internet_check.stop
		pkill -P \$PID sleep
		kill -TERM \$PID
	fi
	rm -f /var/run/reactor_internet_check.pid
}
PROCS
		chmod ug+rx,o= /etc/init.d/reactor_internet_check
		/etc/init.d/reactor_internet_check disable
		rm -f /etc/rc.d/S*reactor_internet_check /etc/rc.d/K*reactor_internet_check
		/etc/init.d/reactor_internet_check enable
		/etc/init.d/reactor_internet_check start
		return 0
	else
		echo "Don't know how to install for this PLATFORM (${PLATFORM}). Please install manually."
		echo "Refer to docs at https://www.toggledbits.com/static/reactor/docs/3.6/Network-Status/"
		return 255
	fi
}

uninstall() {
	if ${IS_VERA:-false}; then
		echo "Uninstalling from Vera (${PLATFORM})..."
		if [ -f /etc/init.d/reactor_internet_check ]; then
			/etc/init.d/reactor_internet_check stop
			/etc/init.d/reactor_internet_check disable
		fi
		rm -f /etc/rc.d/S*reactor_internet_check /etc/rc.d/K*reactor_internet_check
		return 0
	else
		echo "Don't know how to uninstall for this PLATFORM (${PLATFORM}). Please uninstall manually."
		echo "Refer to docs at https://www.toggledbits.com/static/reactor/docs/3.6/Network-Status/"
		return 255
	fi
}

while getopts "c:L:IU" opt; do
	case "${opt}" in
		c) CONF=${OPTARG}
		   ;;
		L) LOGFILE=${OPTARG}
		   ;;
		I) install ; exit $?
		   ;;
		U) uninstall ; exit $?
		   ;;
		:) echo "Error: ${opt} requires an argument"
		   exit 255
		   ;;
		*) echo "Usage: $0 [-c config] [-L logfile]     run daemon"
		   echo "       default config is /tmp/reactor_internet_check.conf"
		   echo "       $0 -I                           install daemon"
		   echo "       $0 -U                           uninstall daemon"
		   exit 255
		   ;;
	esac
done

sleep=60
newstate=""
lastn=1

check_target() {
	echo "Check #${n}: $1..."
	if ping -q -c 3 -W 3 $1; then
		newstate=1
	else
		newstate=0
	fi
}

attempt() {
	n=0
	while [ $n -lt 3 ]; do
		target=$(echo $SERVERS | cut -d ',' -f $lastn)
		if [ -z "$target" ]; then
			lastn=1
		else
			n=$((n+1))
			lastn=$((lastn+1))
			check_target $target
			if [ "$newstate" -eq "1" ]; then
				return
			fi
		fi
	done
	echo "$n targets failed"
	newstate=0
}

check() {
	echo "Checking Internet at $(date)..."
	echo "Server list is ${SERVERS}; next is ${lastn}"
	sleep=60
	attempt
	echo "Updating Reactor state to $newstate"
	if curl -s -o /dev/null -m 15 'http://127.0.0.1:3480/data_request?id=lr_Reactor&action=internet&state='$newstate ; then
		[ "$newstate" == "1" ] && sleep=$INTERVAL # longer sleep
		echo "Successfully updated Reactor; next attempt in ${sleep}s"
	else
		echo "Reactor update failed; luup busy? (will retry) in ${sleep}s"
	fi
}

while [ ! -f /var/run/reactor_internet_check.stop ]; do
	[ -f "${CONF:=/tmp/reactor_internet_check.conf}" ] && source "$CONF"
	SERVERS="${SERVERS:-$DEFAULT_SERVERS}"
	INTERVAL=${INTERVAL:-300}
	check 2>&1 >$LOGFILE
	sleep $sleep
done
exit 0
